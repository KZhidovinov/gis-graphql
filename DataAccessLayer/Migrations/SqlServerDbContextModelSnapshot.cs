// <auto-generated />
using System;
using GisApi.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot: ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GisApi.DataAccessLayer.Models.Node", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<Point>("Location")
                    .HasColumnType("geometry");

                b.Property<long?>("OsmId")
                    .HasColumnType("bigint");

                b.Property<string>("Tags")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Nodes");
            });

            modelBuilder.Entity("GisApi.DataAccessLayer.Models.Way", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<long?>("OsmId")
                    .HasColumnType("bigint");

                b.Property<string>("Tags")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Ways");
            });

            modelBuilder.Entity("GisApi.DataAccessLayer.Models.WayNode", b =>
            {
                b.Property<long>("WayId")
                    .HasColumnType("bigint");

                b.Property<long>("NodeId")
                    .HasColumnType("bigint");

                b.Property<string>("Role")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("WayIdx")
                    .HasColumnType("int");

                b.HasKey("WayId", "NodeId")
                    .HasAnnotation("SqlServer:Clustered", true);

                b.HasIndex("NodeId");

                b.ToTable("WayNodes");
            });

            modelBuilder.Entity("GisApi.DataAccessLayer.Models.WayNode", b =>
            {
                b.HasOne("GisApi.DataAccessLayer.Models.Node", "Node")
                    .WithMany("WayNodes")
                    .HasForeignKey("NodeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("GisApi.DataAccessLayer.Models.Way", "Way")
                    .WithMany("WayNodes")
                    .HasForeignKey("WayId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}